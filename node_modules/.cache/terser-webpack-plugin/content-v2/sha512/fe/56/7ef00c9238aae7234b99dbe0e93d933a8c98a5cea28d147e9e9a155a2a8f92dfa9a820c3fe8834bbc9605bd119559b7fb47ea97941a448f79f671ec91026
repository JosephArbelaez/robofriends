{"map":"{\"version\":3,\"sources\":[\"/Users/vn503o9/Desktop/Robo/robofriends/src/components/Card.js\",\"/Users/vn503o9/Desktop/Robo/robofriends/src/components/CardList.js\",\"/Users/vn503o9/Desktop/Robo/robofriends/src/robots.js\",\"/Users/vn503o9/Desktop/Robo/robofriends/src/components/SearchBox.js\",\"/Users/vn503o9/Desktop/Robo/robofriends/src/components/Scroll.js\",\"/Users/vn503o9/Desktop/Robo/robofriends/src/containers/App.js\",\"/Users/vn503o9/Desktop/Robo/robofriends/src/serviceWorker.js\",\"/Users/vn503o9/Desktop/Robo/robofriends/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"name\",\"email\",\"id\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"concat\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"username\",\"SearchBox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this$state\",\"filteredRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"length\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"React\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Card = ({name, email, id }) => {\\n\\n    return (\\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\\n            <div>\\n                <h2>{name}</h2>\\n                <p>{email}</p>\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default Card;\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({ robots }) => {\\n    return (\\n        <div>\\n        { \\n            robots.map((user, i) => {\\n                return (\\n                <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\\n                );\\n            })\\n        }\\n        </div>\\n        );\\n    }\\n\\nexport default CardList;\",\"export const robots = [\\n    {\\n      id: 1,\\n      name: 'Leanne Graham',\\n      username: 'Bret',\\n      email: 'Sincere@april.biz'\\n    },\\n    {\\n      id: 2,\\n      name: 'Ervin Howell',\\n      username: 'Antonette',\\n      email: 'Shanna@melissa.tv'\\n    },\\n    {\\n      id: 3,\\n      name: 'Clementine Bauch',\\n      username: 'Samantha',\\n      email: 'Nathan@yesenia.net'\\n    },\\n    {\\n      id: 4,\\n      name: 'Patricia Lebsack',\\n      username: 'Karianne',\\n      email: 'Julianne.OConner@kory.org'\\n    },\\n    {\\n      id: 5,\\n      name: 'Chelsey Dietrich',\\n      username: 'Kamren',\\n      email: 'Lucio_Hettinger@annie.ca'\\n    },\\n    {\\n      id: 6,\\n      name: 'Mrs. Dennis Schulist',\\n      username: 'Leopoldo_Corkery',\\n      email: 'Karley_Dach@jasper.info'\\n    },\\n    {\\n      id: 7,\\n      name: 'Kurtis Weissnat',\\n      username: 'Elwyn.Skiles',\\n      email: 'Telly.Hoeger@billy.biz'\\n    },\\n    {\\n      id: 8,\\n      name: 'Nicholas Runolfsdottir V',\\n      username: 'Maxime_Nienow',\\n      email: 'Sherwood@rosamond.me'\\n    },\\n    {\\n      id: 9,\\n      name: 'Glenna Reichert',\\n      username: 'Delphine',\\n      email: 'Chaim_McDermott@dana.io'\\n    },\\n    {\\n      id: 10,\\n      name: 'Clementina DuBuque',\\n      username: 'Moriah.Stanton',\\n      email: 'Rey.Padberg@karina.biz'\\n    }\\n  ];\\n  \",\"import React from 'react';\\nconst SearchBox = ({searchfield, searchChange}) => {\\n    return (\\n        <div className='pa2'>\\n            <input \\n                className='pa3 ba b--green bg-lightest-blue'\\n                type = 'search' \\n                placeholder='search robots'\\n                onChange = {searchChange}\\n                />\\n        </div>\\n    );\\n}\\n\\nexport default SearchBox;\",\"import React from 'react';\\n\\n/*\\n    Lesson on children\\n*/\\n\\nconst Scroll = (props) => {\\n    return (\\n        <div style={{overflowY: 'scroll', border: '2px solid black', height: '500px'}}>\\n            {props.children}\\n        </div>\\n        )\\n};\\n\\nexport default Scroll;\",\"import React from 'react';\\nimport CardList from '../components/CardList'\\nimport { robots } from '../robots';\\nimport SearchBox from '../components/SearchBox';\\nimport './App.css';\\nimport Scroll from '../components/Scroll';\\n\\n/*\\n    This = The App\\n    States are \\\"Smart Components\\\" and holds the state of the app.\\n    constructor is blank on page load\\n    The page is then rendered with loading\\n    Then componentDidMount runs to get the robos\\n    Then the page is rendered again with the robos, the loading text is removed.\\n*/\\n\\nclass App extends React.Component {\\n    constructor() {\\n        super();\\n        this.state =  {\\n            robots: robots,\\n            searchfield: ''\\n        }\\n    }\\n\\n    componentDidMount() {\\n        fetch('https://jsonplaceholder.typicode.com/users')\\n            .then(response => response.json())\\n            .then(users => this.setState({ robots: robots }));\\n        \\n    }\\n\\n    // Function that changes the state based on what the value of the search text\\n    \\n    onSearchChange= (event) => {\\n        this.setState({ searchfield: event.target.value})\\n    }\\n\\n    render(){\\n        const { robots, searchfield } = this.state;\\n        const filteredRobots = robots.filter(robot => {\\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\\n        })\\n\\n        /*\\n            This if statement is just in case \\n            there are lots of information and it is slow to respond\\n        */\\n        return !robots.length ? <h1>Loading</h1> :\\n            (\\n                <div className='tc'>\\n                    <h1 className='f1'>RoboFriends</h1>\\n                    <SearchBox searchChange={this.onSearchChange}/>\\n                    <Scroll>\\n                        <CardList robots={filteredRobots}/>\\n                    </Scroll>\\n                </div>\\n            )\\n        }\\n    }\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport 'tachyons';\\n\\nReactDOM.render(<App /> , document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,a,n){},15:function(e,a,n){},19:function(e,a,n){\"use strict\";n.r(a);var t=n(0),r=n.n(t),i=n(2),o=n.n(i),l=(n(13),n(3)),c=n(4),s=n(6),m=n(5),u=n(7),h=function(e){var a=e.name,n=e.email,t=e.id;return r.a.createElement(\"div\",{className:\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{alt:\"robots\",src:\"https://robohash.org/\".concat(t,\"?200x200\")}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,a),r.a.createElement(\"p\",null,n)))},d=function(e){var a=e.robots;return r.a.createElement(\"div\",null,a.map(function(e,n){return r.a.createElement(h,{key:n,id:a[n].id,name:a[n].name,email:a[n].email})}))},b=[{id:1,name:\"Leanne Graham\",username:\"Bret\",email:\"Sincere@april.biz\"},{id:2,name:\"Ervin Howell\",username:\"Antonette\",email:\"Shanna@melissa.tv\"},{id:3,name:\"Clementine Bauch\",username:\"Samantha\",email:\"Nathan@yesenia.net\"},{id:4,name:\"Patricia Lebsack\",username:\"Karianne\",email:\"Julianne.OConner@kory.org\"},{id:5,name:\"Chelsey Dietrich\",username:\"Kamren\",email:\"Lucio_Hettinger@annie.ca\"},{id:6,name:\"Mrs. Dennis Schulist\",username:\"Leopoldo_Corkery\",email:\"Karley_Dach@jasper.info\"},{id:7,name:\"Kurtis Weissnat\",username:\"Elwyn.Skiles\",email:\"Telly.Hoeger@billy.biz\"},{id:8,name:\"Nicholas Runolfsdottir V\",username:\"Maxime_Nienow\",email:\"Sherwood@rosamond.me\"},{id:9,name:\"Glenna Reichert\",username:\"Delphine\",email:\"Chaim_McDermott@dana.io\"},{id:10,name:\"Clementina DuBuque\",username:\"Moriah.Stanton\",email:\"Rey.Padberg@karina.biz\"}],f=function(e){e.searchfield;var a=e.searchChange;return r.a.createElement(\"div\",{className:\"pa2\"},r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:a}))},g=(n(15),function(e){return r.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"2px solid black\",height:\"500px\"}},e.children)}),p=function(e){function a(){var e;return Object(l.a)(this,a),(e=Object(s.a)(this,Object(m.a)(a).call(this))).onSearchChange=function(a){e.setState({searchfield:a.target.value})},e.state={robots:b,searchfield:\"\"},e}return Object(u.a)(a,e),Object(c.a)(a,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(a){return e.setState({robots:b})})}},{key:\"render\",value:function(){var e=this.state,a=e.robots,n=e.searchfield,t=a.filter(function(e){return e.name.toLowerCase().includes(n.toLowerCase())});return a.length?r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"h1\",{className:\"f1\"},\"RoboFriends\"),r.a.createElement(f,{searchChange:this.onSearchChange}),r.a.createElement(g,null,r.a.createElement(d,{robots:t}))):r.a.createElement(\"h1\",null,\"Loading\")}}]),a}(r.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(17);o.a.render(r.a.createElement(p,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,a,n){e.exports=n(19)}},[[8,2,1]]]);","extractedComments":[]}