{"ast":null,"code":"import _classCallCheck from \"/Users/vn503o9/Desktop/Robo/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vn503o9/Desktop/Robo/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vn503o9/Desktop/Robo/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vn503o9/Desktop/Robo/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vn503o9/Desktop/Robo/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vn503o9/Desktop/Robo/robofriends/src/containers/App.js\";\nimport React from 'react';\nimport CardList from '../components/CardList';\nimport { robots } from '../robots';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n/*\n    This = The App\n    States are \"Smart Components\" and holds the state of the app.\n    constructor is blank on page load\n    The page is then rendered with loading\n    Then componentDidMount runs to get the robos\n    Then the page is rendered again with the robos, the loading text is removed.\n*/\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.onSearchChange = function (event) {\n      _this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    _this.state = {\n      robots: robots,\n      searchfield: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        return _this2.setState({\n          robots: robots\n        });\n      });\n    } // Function that changes the state based on what the value of the search text\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          robots = _this$state.robots,\n          searchfield = _this$state.searchfield;\n      var filteredRobots = robots.filter(function (robot) {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n      });\n      /*\n          This if statement is just in case \n          there are lots of information and it is slow to respond\n      */\n\n      return !robots.length ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading\") : React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"f1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"RoboFriends\"), React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/vn503o9/Desktop/Robo/robofriends/src/containers/App.js"],"names":["React","CardList","robots","SearchBox","Scroll","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA;;;;;;;;;IASMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AACV;;AADU,UAiBdC,cAjBc,GAiBE,UAACC,KAAD,EAAW;AACvB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,KAnBa;;AAEV,UAAKC,KAAL,GAAc;AACVV,MAAAA,MAAM,EAAEA,MADE;AAEVO,MAAAA,WAAW,EAAE;AAFH,KAAd;AAFU;AAMb;;;;wCAEmB;AAAA;;AAChBI,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAG,KAAK;AAAA,eAAI,MAAI,CAACT,QAAL,CAAc;AAAEN,UAAAA,MAAM,EAAEA;AAAV,SAAd,CAAJ;AAAA,OAFf;AAIH,K,CAED;;;;6BAMQ;AAAA,wBAC4B,KAAKU,KADjC;AAAA,UACIV,MADJ,eACIA,MADJ;AAAA,UACYO,WADZ,eACYA,WADZ;AAEJ,UAAMS,cAAc,GAAGhB,MAAM,CAACiB,MAAP,CAAc,UAAAC,KAAK,EAAI;AAC1C,eAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCd,WAAW,CAACa,WAAZ,EAAlC,CAAP;AACH,OAFsB,CAAvB;AAIA;;;;;AAII,aAAO,CAACpB,MAAM,CAACsB,MAAR,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjB,GAEH;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKlB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEY,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,CAFJ;AAUH;;;;EA1CSlB,KAAK,CAACyB,S;;AA6CxB,eAAepB,GAAf","sourcesContent":["import React from 'react';\nimport CardList from '../components/CardList'\nimport { robots } from '../robots';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\n/*\n    This = The App\n    States are \"Smart Components\" and holds the state of the app.\n    constructor is blank on page load\n    The page is then rendered with loading\n    Then componentDidMount runs to get the robos\n    Then the page is rendered again with the robos, the loading text is removed.\n*/\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state =  {\n            robots: robots,\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: robots }));\n        \n    }\n\n    // Function that changes the state based on what the value of the search text\n    \n    onSearchChange= (event) => {\n        this.setState({ searchfield: event.target.value})\n    }\n\n    render(){\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n\n        /*\n            This if statement is just in case \n            there are lots of information and it is slow to respond\n        */\n            return !robots.length ? <h1>Loading</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <CardList robots={filteredRobots}/>\n                    </Scroll>\n                </div>\n            )\n        }\n    }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}